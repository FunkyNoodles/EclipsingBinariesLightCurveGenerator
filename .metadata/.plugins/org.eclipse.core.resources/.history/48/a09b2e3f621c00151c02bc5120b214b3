package eblcg;

import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.Tab;
import javafx.scene.control.TabPane;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.scene.text.Font;
import javafx.scene.text.Text;
import javafx.stage.Stage;

public class GUI extends Application{

	@Override
	public void start(Stage primaryStage) throws Exception {
		primaryStage.setTitle("Eclipsing Binaries Light Curve Generator");
		
		//Declarations
		BorderPane rootMain = new BorderPane();
		VBox controlPaneLeft = new VBox();
		Text inputTitle = new Text("Input");
		Label presetsLabel = new Label("Presets: ");
		ComboBox<String> presetsChoiceBox = new ComboBox<String>();
		Text star1Title = new Text("Star 1: ");
		Label star1MassLabel = new Label("Star 1 Mass (Solar Mass): ");
		TextField star1MassText = new TextField();
		Label star1RadiusLabel = new Label("Star 1 Radius (Solar Radius): ");
		TextField star1RadiusText = new TextField();
		Label star1TempLabel = new Label("Star 1 Temperature (K): ");
		TextField star1TempText = new TextField();
		
		Text star2Title = new Text("Star 2: ");
		Label star2MassLabel = new Label("Star 2 Mass (Solar Mass): ");
		TextField star2MassText = new TextField();
		Label star2RadiusLabel = new Label("Star 2 Radius (Solar Radius): ");
		TextField star2RadiusText = new TextField();
		Label star2TempLabel = new Label("Star 2 Temperature (K): ");
		TextField star2TempText = new TextField();
		
		Label orbitLabel = new Label("Orbit: ");
		Label eccentricityLabel = new Label("Eccentricity: ");
		TextField eccentricityText = new TextField();
		Label maxSeparationLabel = new Label("Max Separation Distance (AU): ");
		TextField maxSparationText = new TextField();
		
		Button advancedBtn = new Button("Advanced Settings...");
		Text advancedTitle = new Text("Advanced Settings");
		
		TabPane graphPane = new TabPane();
		
		VBox controlPaneRight = new VBox();
		Text controlsTitle = new Text("Controls");
		Label imageDirLabel = new Label("Images Directory");
		TextArea dirTextArea = new TextArea();
		Button browseBtn = new Button("Browse...");
		
		
		
		//Initializations
		controlPaneLeft.setAlignment(Pos.CENTER_LEFT);
		controlPaneLeft.setPadding(new Insets(25,25,25,25));
		
		inputTitle.setFont(Font.font(20));
		presetsChoiceBox.getItems().addAll(
				"Custom",
				"Algol AB"
				);
		presetsChoiceBox.setValue("Custom");
		presetsChoiceBox.setOnAction(new EventHandler<ActionEvent>(){
			@Override
			public void handle(ActionEvent event){
				star1MassText.setText(presetsChoiceBox.getValue());
			}
		});
		advancedTitle.setFont(Font.font(20));
		advancedBtn.setOnAction(new EventHandler<ActionEvent>(){
			@Override
			public void handle(ActionEvent event) {
		        StackPane advancedRoot = new StackPane();
		        advancedRoot.getChildren().add(advancedTitle);
		        Stage advancedStage = new Stage();
		        advancedStage.setTitle("Advanced Settings");
		        advancedStage.setScene(new Scene(advancedRoot,450,450));
		        advancedStage.show();
		    }
		});
		
		
		controlPaneRight.setAlignment(Pos.CENTER_RIGHT);
		controlPaneRight.setPadding(new Insets(25,25,25,25));
		dirTextArea.setEditable(false);
		dirTextArea.setPrefSize(200, 100);
		//Setup
		rootMain.setLeft(controlPaneLeft);
		//rootMain.getChildren().add(controlPaneLeft);
		controlPaneLeft.getChildren().add(inputTitle);
		controlPaneLeft.getChildren().add(presetsLabel);
		controlPaneLeft.getChildren().add(presetsChoiceBox);
		controlPaneLeft.getChildren().add(star1Title);
		controlPaneLeft.getChildren().add(star1MassLabel);
		controlPaneLeft.getChildren().add(star1MassText);
		controlPaneLeft.getChildren().add(star1RadiusLabel);
		controlPaneLeft.getChildren().add(star1RadiusText);
		controlPaneLeft.getChildren().add(star1TempLabel);
		controlPaneLeft.getChildren().add(star1TempText);
		controlPaneLeft.getChildren().add(star2Title);
		controlPaneLeft.getChildren().add(star2MassLabel);
		controlPaneLeft.getChildren().add(star2MassText);
		controlPaneLeft.getChildren().add(star2RadiusLabel);
		controlPaneLeft.getChildren().add(star2RadiusText);
		controlPaneLeft.getChildren().add(star2TempLabel);
		controlPaneLeft.getChildren().add(star2TempText);
		controlPaneLeft.getChildren().add(orbitLabel);
		controlPaneLeft.getChildren().add(eccentricityLabel);
		controlPaneLeft.getChildren().add(eccentricityText);
		controlPaneLeft.getChildren().add(maxSeparationLabel);
		controlPaneLeft.getChildren().add(maxSparationText);
		
		controlPaneLeft.getChildren().add(advancedBtn);
		
		rootMain.setCenter(graphPane);
		
		rootMain.setRight(controlPaneRight);
		controlPaneRight.getChildren().add(dirTextArea);
		controlPaneRight.getChildren().add(browseBtn);
		primaryStage.setScene(new Scene(rootMain, 1280, 720));
		primaryStage.show();
	}
	
	public void init(String[] args){
		launch(args);
	}
}
