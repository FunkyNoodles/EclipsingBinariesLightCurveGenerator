package eblcg;

public class LightCurveGenerator {
	
	static Star star1 = new Star(1000, 1000, 1000, 7000);
	static Star star2 = new Star(1000, 1000, 2000, 8000);
	
	//for eclipse
	static double distanceToTravel = 2*(star1.radius+star2.radius); // this is still temporary, only works if the centers cross
	static double step1 = distanceToTravel/((star1.rings+star1.sectors)/2); //distance step for star 1, regardless of direction
	static double step2 = distanceToTravel/((star2.rings+star2.sectors)/2); //distance step for star 2, regardless of direction
	
	public static void main(String[] args){
		
	}
	public static double eclipse(){
		/*At this time, the back star's center is set as the origin in a Cartesian coordinate system
		 * and the front star's center is exactly star1 radius + star2 radius away from the back star
		 * At this point, the front star is assumed to start at the x-axis and only follow the x-axis,
		 * this hopefully will be more generalized as the development goes on
		 */
		double systemBrightness = star1.starBrightness + star2.starBrightness;
		for(int distanceTravelled1=0; distanceTravelled1<distanceToTravel/step1; distanceTravlled1++){
			
		}
		return systemBrightness;
	}
	
}
